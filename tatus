warning: LF will be replaced by CRLF in .idea/compiler.xml.
The file will have its original line endings in your working directory.
[1mdiff --git a/.gitignore b/.gitignore[m
[1mdeleted file mode 100644[m
[1mindex c608379..0000000[m
[1m--- a/.gitignore[m
[1m+++ /dev/null[m
[36m@@ -1,64 +0,0 @@[m
[31m-*.iml[m
[31m-.gradle[m
[31m-/local.properties[m
[31m-/.idea/workspace.xml[m
[31m-/.idea/libraries[m
[31m-.DS_Store[m
[31m-/build[m
[31m-/captures[m
[31m-.externalNativeBuild[m
[31m-# Built application files[m
[31m-*.apk[m
[31m-*.ap_[m
[31m-[m
[31m-# Files for the ART/Dalvik VM[m
[31m-*.dex[m
[31m-[m
[31m-# Java class files[m
[31m-*.class[m
[31m-[m
[31m-# Generated files[m
[31m-bin/[m
[31m-gen/[m
[31m-out/[m
[31m-[m
[31m-# Gradle files[m
[31m-.gradle/[m
[31m-build/[m
[31m-[m
[31m-# Local configuration file (sdk path, etc)[m
[31m-local.properties[m
[31m-[m
[31m-# Proguard folder generated by Eclipse[m
[31m-proguard/[m
[31m-[m
[31m-# Log Files[m
[31m-*.log[m
[31m-[m
[31m-# Android Studio Navigation editor temp files[m
[31m-.navigation/[m
[31m-[m
[31m-# Android Studio captures folder[m
[31m-captures/[m
[31m-[m
[31m-# Intellij[m
[31m-*.iml[m
[31m-.idea/workspace.xml[m
[31m-.idea/tasks.xml[m
[31m-.idea/gradle.xml[m
[31m-.idea/dictionaries[m
[31m-.idea/libraries[m
[31m-[m
[31m-# Keystore files[m
[31m-*.jks[m
[31m-[m
[31m-# External native build folder generated in Android Studio 2.2 and later[m
[31m-.externalNativeBuild[m
[31m-[m
[31m-# Google Services (e.g. APIs or Firebase)[m
[31m-google-services.json[m
[31m-[m
[31m-# Freeline[m
[31m-freeline.py[m
[31m-freeline/[m
[31m-freeline_project_description.json[m
\ No newline at end of file[m
[1mdiff --git a/.idea/compiler.xml b/.idea/compiler.xml[m
[1mdeleted file mode 100644[m
[1mindex 96cc43e..0000000[m
[1m--- a/.idea/compiler.xml[m
[1m+++ /dev/null[m
[36m@@ -1,22 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="CompilerConfiguration">[m
[31m-    <resourceExtensions />[m
[31m-    <wildcardResourcePatterns>[m
[31m-      <entry name="!?*.java" />[m
[31m-      <entry name="!?*.form" />[m
[31m-      <entry name="!?*.class" />[m
[31m-      <entry name="!?*.groovy" />[m
[31m-      <entry name="!?*.scala" />[m
[31m-      <entry name="!?*.flex" />[m
[31m-      <entry name="!?*.kt" />[m
[31m-      <entry name="!?*.clj" />[m
[31m-      <entry name="!?*.aj" />[m
[31m-    </wildcardResourcePatterns>[m
[31m-    <annotationProcessing>[m
[31m-      <profile default="true" name="Default" enabled="false">[m
[31m-        <processorPath useClasspath="true" />[m
[31m-      </profile>[m
[31m-    </annotationProcessing>[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/copyright/profiles_settings.xml b/.idea/copyright/profiles_settings.xml[m
[1mdeleted file mode 100644[m
[1mindex e7bedf3..0000000[m
[1m--- a/.idea/copyright/profiles_settings.xml[m
[1m+++ /dev/null[m
[36m@@ -1,3 +0,0 @@[m
[31m-<component name="CopyrightManager">[m
[31m-  <settings default="" />[m
[31m-</component>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/misc.xml b/.idea/misc.xml[m
[1mdeleted file mode 100644[m
[1mindex 5d19981..0000000[m
[1m--- a/.idea/misc.xml[m
[1m+++ /dev/null[m
[36m@@ -1,46 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="EntryPointsManager">[m
[31m-    <entry_points version="2.0" />[m
[31m-  </component>[m
[31m-  <component name="NullableNotNullManager">[m
[31m-    <option name="myDefaultNullable" value="android.support.annotation.Nullable" />[m
[31m-    <option name="myDefaultNotNull" value="android.support.annotation.NonNull" />[m
[31m-    <option name="myNullables">[m
[31m-      <value>[m
[31m-        <list size="4">[m
[31m-          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.Nullable" />[m
[31m-          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nullable" />[m
warning: LF will be replaced by CRLF in .idea/misc.xml.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in .idea/modules.xml.
The file will have its original line endings in your working directory.
warning: LF will be replaced by CRLF in .idea/runConfigurations.xml.
The file will have its original line endings in your working directory.
[31m-          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.Nullable" />[m
[31m-          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.Nullable" />[m
[31m-        </list>[m
[31m-      </value>[m
[31m-    </option>[m
[31m-    <option name="myNotNulls">[m
[31m-      <value>[m
[31m-        <list size="4">[m
[31m-          <item index="0" class="java.lang.String" itemvalue="org.jetbrains.annotations.NotNull" />[m
[31m-          <item index="1" class="java.lang.String" itemvalue="javax.annotation.Nonnull" />[m
[31m-          <item index="2" class="java.lang.String" itemvalue="edu.umd.cs.findbugs.annotations.NonNull" />[m
[31m-          <item index="3" class="java.lang.String" itemvalue="android.support.annotation.NonNull" />[m
[31m-        </list>[m
[31m-      </value>[m
[31m-    </option>[m
[31m-  </component>[m
[31m-  <component name="ProjectLevelVcsManager" settingsEditedManually="false">[m
[31m-    <OptionsSetting value="true" id="Add" />[m
[31m-    <OptionsSetting value="true" id="Remove" />[m
[31m-    <OptionsSetting value="true" id="Checkout" />[m
[31m-    <OptionsSetting value="true" id="Update" />[m
[31m-    <OptionsSetting value="true" id="Status" />[m
[31m-    <OptionsSetting value="true" id="Edit" />[m
[31m-    <ConfirmationsSetting value="0" id="Add" />[m
[31m-    <ConfirmationsSetting value="0" id="Remove" />[m
[31m-  </component>[m
[31m-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" assert-keyword="true" jdk-15="true" project-jdk-name="1.8" project-jdk-type="JavaSDK">[m
[31m-    <output url="file://$PROJECT_DIR$/build/classes" />[m
[31m-  </component>[m
[31m-  <component name="ProjectType">[m
[31m-    <option name="id" value="Android" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/modules.xml b/.idea/modules.xml[m
[1mdeleted file mode 100644[m
[1mindex 82cf047..0000000[m
[1m--- a/.idea/modules.xml[m
[1m+++ /dev/null[m
[36m@@ -1,10 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="ProjectModuleManager">[m
[31m-    <modules>[m
[31m-      <module fileurl="file://$PROJECT_DIR$/LagosJavaGurus - Copy.iml" filepath="$PROJECT_DIR$/LagosJavaGurus - Copy.iml" />[m
[31m-      <module fileurl="file://$PROJECT_DIR$/app/app.iml" filepath="$PROJECT_DIR$/app/app.iml" />[m
[31m-      <module fileurl="file://$PROJECT_DIR$/glide-full-4.0.0-RC1/glide-full-4.0.0-RC1.iml" filepath="$PROJECT_DIR$/glide-full-4.0.0-RC1/glide-full-4.0.0-RC1.iml" />[m
[31m-    </modules>[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml[m
[1mdeleted file mode 100644[m
[1mindex 7f68460..0000000[m
[1m--- a/.idea/runConfigurations.xml[m
[1m+++ /dev/null[m
[36m@@ -1,12 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="RunConfigurationProducerService">[m
[31m-    <option name="ignoredProducers">[m
[31m-      <set>[m
[31m-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />[m
[31m-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />[m
[31m-        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />[m
[31m-      </set>[m
[31m-    </option>[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/.idea/vcs.xml b/.idea/vcs.xml[m
[1mdeleted file mode 100644[m
[1mindex 94a25f7..0000000[m
[1m--- a/.idea/vcs.xml[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-<?xml version="1.0" encoding="UTF-8"?>[m
[31m-<project version="4">[m
[31m-  <component name="VcsDirectoryMappings">[m
[31m-    <mapping directory="$PROJECT_DIR$" vcs="Git" />[m
[31m-  </component>[m
[31m-</project>[m
\ No newline at end of file[m
[1mdiff --git a/app/src/main/java/com/example/babajidemustapha/lagosjavagurus/User.java b/app/src/main/java/com/example/babajidemustapha/lagosjavagurus/User.java[m
[1mindex 3aae43c..861aef5 100644[m
[1m--- a/app/src/main/java/com/example/babajidemustapha/lagosjavagurus/User.java[m
[1m+++ b/app/src/main/java/com/example/babajidemustapha/lagosjavagurus/User.java[m
[36m@@ -1,34 +1,20 @@[m
 package com.example.babajidemustapha.lagosjavagurus;[m
 [m
[32m+[m[32mimport android.graphics.Bitmap;[m
[32m+[m
 /**[m
  * Created by Babajide Mustapha on 8/4/2017.[m
  */[m
 [m
 public class User {[m
[31m-    private String username;[m
[31m-    private String gitUrl;[m
[31m-    private String avi;[m
[31m-    private String file;[m
[32m+[m[32m    String username;[m
[32m+[m[32m    String gitUrl;[m
[32m+[m[32m    String avi;[m
[32m+[m[32m    String file;[m
     public User(String username, String gitUrl, String avi, String file){[m
         this.username = username;[m
         this.gitUrl = gitUrl;[m
         this.avi = avi;[m
         this.file = file;[m
     }[m
[31m-[m
[31m-    public String getGitUrl() {[m
[31m-        return gitUrl;[m
[31m-    }[m
[31m-[m
[31m-    public String getAvi() {[m
[31m-        return avi;[m
[31m-    }[m
[31m-[m
[31m-    public String getFile() {[m
[31m-        return file;[m
[31m-    }[m
[31m-[m
[31m-    public String getUsername() {[m
[31m-        return username;[m
[31m-    }[m
 }[m
[1mdiff --git a/app/src/main/java/com/example/babajidemustapha/lagosjavagurus/UsersPage.java b/app/src/main/java/com/example/babajidemustapha/lagosjavagurus/UsersPage.java[m
[1mindex 9d7353c..7f6622b 100644[m
[1m--- a/app/src/main/java/com/example/babajidemustapha/lagosjavagurus/UsersPage.java[m
[1m+++ b/app/src/main/java/com/example/babajidemustapha/lagosjavagurus/UsersPage.java[m
[36m@@ -1,37 +1,51 @@[m
 package com.example.babajidemustapha.lagosjavagurus;[m
 [m
[32m+[m[32mimport android.app.AlertDialog;[m
 import android.app.ProgressDialog;[m
 import android.content.ContentValues;[m
 import android.content.Context;[m
 import android.content.ContextWrapper;[m
[32m+[m[32mimport android.content.DialogInterface;[m
 import android.content.Intent;[m
 import android.database.Cursor;[m
 import android.database.sqlite.SQLiteDatabase;[m
 import android.database.sqlite.SQLiteOpenHelper;[m
 import android.graphics.Bitmap;[m
 import android.graphics.BitmapFactory;[m
[32m+[m[32mimport android.graphics.drawable.Drawable;[m
[32m+[m[32mimport android.net.Uri;[m
 import android.os.AsyncTask;[m
[31m-import android.os.Bundle;[m
 import android.support.v4.graphics.drawable.RoundedBitmapDrawable;[m
 import android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory;[m
 import android.support.v4.widget.SwipeRefreshLayout;[m
 import android.support.v7.app.AppCompatActivity;[m
[32m+[m[32mimport android.os.Bundle;[m
 import android.support.v7.widget.LinearLayoutManager;[m
 import android.support.v7.widget.RecyclerView;[m
[32m+[m[32mimport android.util.JsonReader;[m
 import android.util.Log;[m
[32m+[m[32mimport android.view.LayoutInflater;[m
 import android.view.View;[m
 import android.view.ViewGroup;[m
[32m+[m[32mimport android.widget.AbsListView;[m
[32m+[m[32mimport android.widget.AdapterView;[m
[32m+[m[32mimport android.widget.ArrayAdapter;[m
[32m+[m[32mimport android.widget.Button;[m
 import android.widget.ImageView;[m
 import android.widget.LinearLayout;[m
[32m+[m[32mimport android.widget.ListView;[m
 import android.widget.ProgressBar;[m
 import android.widget.TextView;[m
 import android.widget.Toast;[m
 [m
 import com.bumptech.glide.Glide;[m
[32m+[m[32mimport com.bumptech.glide.RequestBuilder;[m
[32m+[m[32mimport com.bumptech.glide.TransitionOptions;[m
 import com.bumptech.glide.load.engine.DiskCacheStrategy;[m
 import com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions;[m
 import com.bumptech.glide.load.resource.bitmap.CircleCrop;[m
 import com.bumptech.glide.request.RequestOptions;[m
[32m+[m[32mimport com.bumptech.glide.request.transition.Transition;[m
 [m
 import org.json.JSONArray;[m
 import org.json.JSONObject;[m
[36m@@ -40,6 +54,7 @@[m [mimport org.json.JSONTokener;[m
 import java.io.BufferedReader;[m
 import java.io.File;[m
 import java.io.FileOutputStream;[m
[32m+[m[32mimport java.io.IOException;[m
 import java.io.InputStream;[m
 import java.io.InputStreamReader;[m
 import java.net.HttpURLConnection;[m
[36m@@ -51,7 +66,6 @@[m [mimport java.util.List;[m
 [m
 public class UsersPage extends AppCompatActivity {[m
 [m
[31m-    private final int per_page = 20;[m
     String response;[m
     URL address;[m
     JSONObject result;[m
[36m@@ -60,6 +74,7 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
     List<User> users;[m
     LinearLayout items_layout;[m
     int pages = 1;[m
[32m+[m[32m    private final int per_page = 20;[m
     boolean loading = false;[m
     boolean dataEnd = false;[m
     int totalcount;[m
[36m@@ -86,8 +101,8 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
         items_layout = (LinearLayout) findViewById(R.id.items_layout);[m
         swipe = (SwipeRefreshLayout) findViewById(R.id.swipe);[m
         new LoadCachedUsers().execute();[m
[31m-        swipe.setOnRefreshListener([m
[31m-                new SwipeRefreshLayout.OnRefreshListener() {[m
[32m+[m[32m       // new LoadUsers().execute(query);[m
[32m+[m[32m        swipe.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {[m
             @Override[m
             public void onRefresh() {[m
                 pages = 1;[m
[36m@@ -117,6 +132,35 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
             }[m
         });[m
 [m
[32m+[m[32m//        listview.setOnItemClickListener(new AdapterView.OnItemClickListener(){[m
[32m+[m[32m//            @Override[m
[32m+[m[32m//            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {[m
[32m+[m[32m//                Intent intent = new Intent(getApplicationContext(),ProfilePage.class);[m
[32m+[m[32m////                intent.putExtra("username",users.get(position).username);[m
[32m+[m[32m////                intent.putExtra("gitUrl",users.get(position).gitUrl);[m
[32m+[m[32m//              //  intent.putExtra("avatarUrl",users.get(position).aviUrl);[m
[32m+[m[32m//                 startActivity(intent);[m
[32m+[m[32m//            }[m
[32m+[m[32m//[m
[32m+[m[32m//        });[m
[32m+[m[32m//        listview.setOnScrollListener(new AbsListView.OnScrollListener() {[m
[32m+[m[32m//            @Override[m
[32m+[m[32m//            public void onScrollStateChanged(AbsListView view, int scrollState) {[m
[32m+[m[32m//[m
[32m+[m[32m//            }[m
[32m+[m[32m//[m
[32m+[m[32m//            @Override[m
[32m+[m[32m//            public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) {[m
[32m+[m[32m//                if(firstVisibleItem+visibleItemCount == totalItemCount && totalItemCount!=0)[m
[32m+[m[32m//                {[m
[32m+[m[32m//                    if(loading == false)[m
[32m+[m[32m//                    {[m
[32m+[m[32m//                        loading = true;[m
[32m+[m[32m//                      doNext();[m
[32m+[m[32m//                    }[m
[32m+[m[32m//                }[m
[32m+[m[32m//            }[m
[32m+[m[32m//        });[m
     }[m
     public void doNext(){[m
         try {[m
[36m@@ -139,37 +183,9 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
             e.printStackTrace();[m
         }[m
     }[m
[32m+[m[32m    public class LoadUsers extends AsyncTask<String,Void,Void> {[m
 [m
[31m-    private void saveImage(String imgname, Bitmap bitmap) {[m
[31m-        ContextWrapper cw = new ContextWrapper(getApplicationContext());[m
[31m-        // path to /data/data/yourapp/app_data/imageDir[m
[31m-        File directory = cw.getDir("images", Context.MODE_PRIVATE);[m
[31m-        // Create imageDir[m
[31m-        File mypath = new File(directory, imgname + ".png");[m
[31m-        try {[m
[31m-            FileOutputStream fos = new FileOutputStream(mypath);[m
[31m-            // Use the compress method on the BitMap object to write image to the OutputStream[m
[31m-            bitmap.compress(Bitmap.CompressFormat.PNG, 100, fos);[m
[31m-            fos.close();[m
[31m-        } catch (Exception e) {[m
[31m-            e.printStackTrace();[m
[31m-        }[m
[31m-    }[m
[31m-[m
[31m-    private boolean deleteImage(String imgname) {[m
[31m-        ContextWrapper cw = new ContextWrapper(getApplicationContext());[m
[31m-        File directory = cw.getDir("images", Context.MODE_PRIVATE);[m
[31m-        File mypath = new File(directory, imgname + ".png");[m
[31m-        return mypath.delete();[m
[31m-    }[m
[31m-[m
[31m-    private String getImagePath(String imgname) {[m
[31m-        ContextWrapper cw = new ContextWrapper(getApplicationContext());[m
[31m-        return new File(cw.getDir("images", Context.MODE_PRIVATE), imgname + ".png").getAbsolutePath();[m
[31m-    }[m
[31m-[m
[31m-    private class LoadUsers extends AsyncTask<String, Void, Void> {[m
[31m-[m
[32m+[m[32m        int count;[m
         boolean apiLimit = false;[m
         boolean failed = false;[m
         RequestOptions saveSettings;[m
[36m@@ -230,12 +246,17 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
                                 JSONObject obj = items.getJSONObject(i);[m
                                 String picUrl = obj.getString("avatar_url");[m
                                 try {[m
[32m+[m[32m//                                users.add(i, new User(obj.getString("login"), obj.getString("html_url"), obj.getString("avatar_url"),[m
[32m+[m[32m//                                        BitmapFactory.decodeStream(picUrl.openConnection().getInputStream())));[m
[32m+[m[32m//                                avatars.add(i, BitmapFactory.decodeStream(picUrl.openConnection().getInputStream()));                     Flie[m
                                     String imgName = new SimpleDateFormat("ddMMyyyyHHmmss:SSSS").format(new Date());[m
                                     saveImage(imgName,[m
                                             Glide.with(UsersPage.this).asBitmap().apply(saveSettings).load(picUrl).submit(320, 320).get());[m
                                     Log.e("path", picUrl);[m
                                     dbHelper.insertUser(obj.getString("login"), obj.getString("html_url"), picUrl, getImagePath(imgName));[m
                                 } catch (Exception e) {[m
[32m+[m[32m//                                users.add(i, new User(obj.getString("login"), obj.getString("html_url"), obj.getString("avatar_url"),[m
[32m+[m[32m//                                        null));[m
                                     e.printStackTrace();[m
                                     break;[m
                                 }[m
[36m@@ -265,8 +286,10 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
         protected void onPostExecute(Void a) {[m
            new LoadCachedUsers().execute();[m
             if (!failed) {[m
[31m-                if (apiLimit) {[m
[31m-                    Toast.makeText(UsersPage.this, "API Limit Exceeded. Please Try later", Toast.LENGTH_SHORT).show();[m
[32m+[m[32m                if (!apiLimit) {[m
[32m+[m
[32m+[m[32m                } else {[m
[32m+[m[32m                   Toast.makeText(UsersPage.this,"API Limit Exceeded. Please Try later",Toast.LENGTH_SHORT).show();[m
                 }[m
                 if(pages<=1) {[m
                     pDialog.dismiss();[m
[36m@@ -288,15 +311,39 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
             loading = false;[m
         }[m
     }[m
[31m-[m
[31m-    private class LoadCachedUsers extends AsyncTask<Void, Void, Void> {[m
[32m+[m[32m    private void saveImage(String imgname, Bitmap bitmap){[m
[32m+[m[32m        ContextWrapper cw = new ContextWrapper(getApplicationContext());[m
[32m+[m[32m        // path to /data/data/yourapp/app_data/imageDir[m
[32m+[m[32m        File directory = cw.getDir("images", Context.MODE_PRIVATE);[m
[32m+[m[32m        // Create imageDir[m
[32m+[m[32m        File mypath=new File(directory,imgname+".png");[m
[32m+[m[32m        try {[m
[32m+[m[32m            FileOutputStream  fos = new FileOutputStream(mypath);[m
[32m+[m[32m            // Use the compress method on the BitMap object to write image to the OutputStream[m
[32m+[m[32m            bitmap.compress(Bitmap.CompressFormat.PNG, 100, fos);[m
[32m+[m[32m            fos.close();[m
[32m+[m[32m        } catch (Exception e) {[m
[32m+[m[32m            e.printStackTrace();[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m    private void deleteImage(String imgname){[m
[32m+[m[32m        ContextWrapper cw = new ContextWrapper(getApplicationContext());[m
[32m+[m[32m        File directory = cw.getDir("images", Context.MODE_PRIVATE);[m
[32m+[m[32m        File mypath=new File(directory,imgname+".png");[m
[32m+[m[32m        mypath.delete();[m
[32m+[m[32m    }[m
[32m+[m[32m    private String getImagePath(String imgname){[m
[32m+[m[32m        ContextWrapper cw = new ContextWrapper(getApplicationContext());[m
[32m+[m[32m       return new File(cw.getDir("images", Context.MODE_PRIVATE),imgname+".png").getAbsolutePath();[m
[32m+[m[32m    }[m
[32m+[m[32m    public  class LoadCachedUsers extends AsyncTask<Void,Void,Void>{[m
 [m
                  Cursor cursor;[m
         @Override[m
         protected Void doInBackground(Void... params) {[m
             dbHelper = new UsersDatabase();[m
             if(pages <= 1) {[m
[31m-                users = new ArrayList<>();[m
[32m+[m[32m                users = new ArrayList<User>();[m
                 cursor = dbHelper.getAllUsers();[m
                 while(cursor.moveToNext()){[m
                     users.add(new User(cursor.getString(cursor.getColumnIndex("NAME")),[m
[36m@@ -352,11 +399,9 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
             }[m
         }[m
     }[m
[31m-[m
[31m-    private class UsersDatabase extends SQLiteOpenHelper {[m
[32m+[m[32m    public class UsersDatabase extends SQLiteOpenHelper{[m
         String createTable = "CREATE TABLE USER(_id INTEGER, NAME TEXT, URL TEXT, IMAGE TEXT, FILE TEXT)";[m
[31m-[m
[31m-        private UsersDatabase() {[m
[32m+[m[32m        public UsersDatabase(){[m
             super(getApplicationContext(),"UsersDB",null,2);[m
         }[m
         @Override[m
[36m@@ -373,8 +418,7 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
         public void onDowngrade(SQLiteDatabase db, int oldVersion, int newVersion){[m
 [m
         }[m
[31m-[m
[31m-        private void emptyTable() {[m
[32m+[m[32m        public void emptyTable(){[m
             SQLiteDatabase db = this.getWritableDatabase();[m
             try {[m
                 Cursor cursor = db.rawQuery("Select IMAGE from USER ", null);[m
[36m@@ -383,7 +427,6 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
                         deleteImage(cursor.getColumnName(cursor.getColumnIndex("IMAGE")));[m
                     }[m
                 }[m
[31m-                cursor.close();[m
             }[m
             catch (Exception e){[m
                 e.printStackTrace();[m
[36m@@ -391,8 +434,7 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
             db.execSQL("DROP TABLE IF EXISTS USER");[m
             onCreate(db);[m
         }[m
[31m-[m
[31m-        private void insertUser(String name, String url, String imgUrl, String imgPath) {[m
[32m+[m[32m        public  void insertUser(String name, String url, String imgUrl, String imgPath){[m
             SQLiteDatabase db = this.getWritableDatabase();[m
             ContentValues values = new ContentValues();[m
             values.put("NAME", name);[m
[36m@@ -401,14 +443,44 @@[m [mpublic class UsersPage extends AppCompatActivity {[m
             values.put("FILE", imgPath);[m
             db.insert("USER",null,values);[m
         }[m
[31m-[m
[31m-        private Cursor getAllUsers() {[m
[32m+[m[32m        public Cursor getAllUsers(){[m
             SQLiteDatabase db = this.getReadableDatabase();[m
             return db.query("USER",null,null,null,null,null,null,"20");[m
         }[m
     }[m
[31m-[m
[31m-    private class CustomAdapter1 extends RecyclerView.Adapter<CustomAdapter1.ViewHolder> {[m
[32m+[m[32m//    public class CustomAdapter extends ArrayAdapter<User>{[m
[32m+[m[32m//        Context context;[m
[32m+[m[32m//        List<User> source;[m
[32m+[m[32m//        public CustomAdapter(Context context, int layoutResource, List<User> source ){[m
[32m+[m[32m//            super(context,layoutResource,source);[m
[32m+[m[32m//            this.context = context;[m
[32m+[m[32m//            this.source = source;[m
[32m+[m[32m//        }[m
[32m+[m[32m//        @Override[m
[32m+[m[32m//        public int getCount() {[m
[32m+[m[32m//            return super.getCount();[m
[32m+[m[32m//        }[m
[32m+[m[32m//        @Override[m
[32m+[m[32m//        public void add(User user){[m
[32m+[m[32m//            source.add(user);[m
[32m+[m[32m//        }[m
[32m+[m[32m//[m
[32m+[m[32m//        @Override[m
[32m+[m[32m//        public View getView(int position, View convertView, ViewGroup parent) {[m
[32m+[m[32m//            View view;[m
[32m+[m[32m//            LayoutInflater inflater = getLayoutInflater();[m
[32m+[m[32m//            view = inflater.inflate(R.layout.list_view_item_layout,items_layout, true);[m
[32m+[m[32m//            TextView username = (TextView) view.findViewById(R.id.username);[m
[32m+[m[32m//            ImageView avi = (ImageView) view.findViewById(R.id.avatar);[m
[32m+[m[32m//            username.setText("@"+source.get(position).username);[m
[32m+[m[32m//            if(source.get(position).avi != null) {[m
[32m+[m[32m//              //  avi.setImageBitmap(source.get(position).aviUrl);[m
[32m+[m[32m//            }[m
[32m+[m[32m//            return view;[m
[32m+[m[32m//        }[m
[32m+[m[32m//    }[m
[32m+[m
[32m+[m[32m    public class CustomAdapter1 extends RecyclerView.Adapter<CustomAdapter1.ViewHolder>{[m
         Context context;[m
         List<User> source;[m
 [m
[36m@@ -416,17 +488,34 @@[m [mRequestOptions settings = new RequestOptions()[m
         .transform(new CircleCrop())[m
         .placeholder(placeholder)[m
         .error(placeholder);[m
[31m-[m
[31m-        private CustomAdapter1(Context context, List<User> source) {[m
[32m+[m[32m        public  void add(User user){[m
[32m+[m[32m            source.add(user);[m
[32m+[m[32m        }[m
[32m+[m[32m        public class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {[m
[32m+[m[32m            TextView username;[m
[32m+[m[32m            ImageView avatar;[m
[32m+[m[32m            public ViewHolder(View itemView) {[m
[32m+[m[32m                super(itemView);[m
[32m+[m[32m                username = (TextView) itemView.findViewById(R.id.username);[m
[32m+[m[32m                avatar = (ImageView) itemView.findViewById(R.id.avatar);[m
[32m+[m[32m                itemView.setOnClickListener(this);[m
[32m+[m[32m            }[m
[32m+[m[32m            @Override[m
[32m+[m[32m            public void onClick(View view) {[m
[32m+[m[32m                Intent intent = new Intent(UsersPage.this,ProfilePage.class);[m
[32m+[m[32m                intent.putExtra("username",source.get(getAdapterPosition()).username);[m
[32m+[m[32m              intent.putExtra("gitUrl",source.get(getAdapterPosition()).gitUrl);[m
[32m+[m[32m                  intent.putExtra("avatarUrl",source.get(getAdapterPosition()).avi);[m
[32m+[m[32m                intent.putExtra("filePath", source.get(getAdapterPosition()).file);[m
[32m+[m[32m                startActivity(intent);[m
[32m+[m[32m            }[m
[32m+[m[32m        }[m
[32m+[m[32m        public CustomAdapter1(Context context, List<User> source ){[m
 [m
             this.context = context;[m
             this.source = source;[m
         }[m
 [m
[31m-        private void add(User user) {[m
[31m-            source.add(user);[m
[31m-        }[m
[31m-[m
         @Override[m
         public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {[m
             return new ViewHolder(getLayoutInflater().inflate(R.layout.list_view_item_layout,parent, false));[m
[36m@@ -434,12 +523,13 @@[m [mRequestOptions settings = new RequestOptions()[m
 [m
         @Override[m
         public void onBindViewHolder(ViewHolder holder, int position) {[m
[31m-            holder.username.setText("@" + source.get(position).getUsername());[m
[32m+[m[32m            holder.username.setText("@"+source.get(position).username);[m
[32m+[m[32m                Log.e("on bind viewholder" ,new File(source.get(position).file).getPath());[m
 [m
             Glide.with(UsersPage.this)[m
                     .asBitmap()[m
                     .transition(new BitmapTransitionOptions().crossFade())[m
[31m-                    .load(source.get(position).getFile())[m
[32m+[m[32m                    .load(source.get(position).file)[m
                     .apply(settings)[m
                     .into(holder.avatar);[m
         }[m
[36m@@ -448,27 +538,5 @@[m [mRequestOptions settings = new RequestOptions()[m
         public int getItemCount() {[m
             return source.size();[m
         }[m
[31m-[m
[31m-        protected class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {[m
[31m-            TextView username;[m
[31m-            ImageView avatar;[m
[31m-[m
[31m-            private ViewHolder(View itemView) {[m
[31m-                super(itemView);[m
[31m-                username = (TextView) itemView.findViewById(R.id.username);[m
[31m-                avatar = (ImageView) itemView.findViewById(R.id.avatar);[m
[31m-                itemView.setOnClickListener(this);[m
[31m-            }[m
[31m-[m
[31m-            @Override[m
[31m-            public void onClick(View view) {[m
[31m-                Intent intent = new Intent(UsersPage.this, ProfilePage.class);[m
[31m-                intent.putExtra("username", source.get(getAdapterPosition()).getUsername());[m
[31m-                intent.putExtra("gitUrl", source.get(getAdapterPosition()).getGitUrl());[m
[31m-                intent.putExtra("avatarUrl", source.get(getAdapterPosition()).getAvi());[m
[31m-                intent.putExtra("filePath", source.get(getAdapterPosition()).getFile());[m
[31m-                startActivity(intent);[m
[31m-            }[m
[31m-        }[m
     }[m
 }[m
[1mdiff --git a/build.gradle b/build.gradle[m
[1mdeleted file mode 100644[m
[1mindex c2eea8e..0000000[m
[1m--- a/build.gradle[m
[1m+++ /dev/null[m
[36m@@ -1,23 +0,0 @@[m
[31m-// Top-level build file where you can add configuration options common to all sub-projects/modules.[m
[31m-[m
[31m-buildscript {[m
[31m-    repositories {[m
[31m-        jcenter()[m
[31m-    }[m
[31m-    dependencies {[m
[31m-        classpath 'com.android.tools.build:gradle:2.3.3'[m
[31m-[m
[31m-        // NOTE: Do not place your application dependencies here; they belong[m
[31m-        // in the individual module build.gradle files[m
[31m-    }[m
[31m-}[m
[31m-[m
[31m-allprojects {[m
[31m-    repositories {[m
[31m-        jcenter()[m
[31m-    }[m
[31m-}[m
[31m-[m
[31m-task clean(type: Delete) {[m
[31m-    delete rootProject.buildDir[m
[31m-}[m
[1mdiff --git a/grawarning: LF will be replaced by CRLF in .idea/vcs.xml.
The file will have its original line endings in your working directory.
dle.properties b/gradle.properties[m
[1mdeleted file mode 100644[m
[1mindex 743d692..0000000[m
[1m--- a/gradle.properties[m
[1m+++ /dev/null[m
[36m@@ -1,13 +0,0 @@[m
[31m-# Project-wide Gradle settings.[m
[31m-# IDE (e.g. Android Studio) users:[m
[31m-# Gradle settings configured through the IDE *will override*[m
[31m-# any settings specified in this file.[m
[31m-# For more details on how to configure your build environment visit[m
[31m-# http://www.gradle.org/docs/current/userguide/build_environment.html[m
[31m-# Specifies the JVM arguments used for the daemon process.[m
[31m-# The setting is particularly useful for tweaking memory settings.[m
[31m-org.gradle.jvmargs=-Xmx1536m[m
[31m-# When configured, Gradle will run in incubating parallel mode.[m
[31m-# This option should only be used with decoupled projects. More details, visit[m
[31m-# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects[m
[31m-# org.gradle.parallel=true[m
[1mdiff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar[m
[1mdeleted file mode 100644[m
[1mindex 13372ae..0000000[m
Binary files a/gradle/wrapper/gradle-wrapper.jar and /dev/null differ
[1mdiff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties[m
[1mdeleted file mode 100644[m
[1mindex ce312d1..0000000[m
[1m--- a/gradle/wrapper/gradle-wrapper.properties[m
[1m+++ /dev/null[m
[36m@@ -1,6 +0,0 @@[m
[31m-#Tue Aug 01 18:48:34 WAT 2017[m
[31m-distributionBase=GRADLE_USER_HOME[m
[31m-distributionPath=wrapper/dists[m
[31m-zipStoreBase=GRADLE_USER_HOME[m
[31m-zipStorePath=wrapper/dists[m
[31m-distributionUrl=https\://services.gradle.org/distributions/gradle-3.3-all.zip[m
[1mdiff --git a/gradlew b/gradlew[m
[1mdeleted file mode 100644[m
[1mindex 9d82f78..0000000[m
[1m--- a/gradlew[m
[1m+++ /dev/null[m
[36m@@ -1,160 +0,0 @@[m
[31m-#!/usr/bin/env bash[m
[31m-[m
[31m-##############################################################################[m
[31m-##[m
[31m-##  Gradle start up script for UN*X[m
[31m-##[m
[31m-##############################################################################[m
[31m-[m
[31m-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.[m
[31m-DEFAULT_JVM_OPTS=""[m
[31m-[m
[31m-APP_NAME="Gradle"[m
[31m-APP_BASE_NAME=`basename "$0"`[m
[31m-[m
[31m-# Use the maximum available, or set MAX_FD != -1 to use that value.[m
[31m-MAX_FD="maximum"[m
[31m-[m
[31m-warn ( ) {[m
[31m-    echo "$*"[m
[31m-}[m
[31m-[m
[31m-die ( ) {[m
[31m-    echo[m
[31m-    echo "$*"[m
[31m-    echo[m
[31m-    exit 1[m
[31m-}[m
[31m-[m
[31m-# OS specific support (must be 'true' or 'false').[m
[31m-cygwin=false[m
[31m-msys=false[m
[31m-darwin=false[m
[31m-case "`uname`" in[m
[31m-  CYGWIN* )[m
[31m-    cygwin=true[m
[31m-    ;;[m
[31m-  Darwin* )[m
[31m-    darwin=true[m
[31m-    ;;[m
[31m-  MINGW* )[m
[31m-    msys=true[m
[31m-    ;;[m
[31m-esac[m
[31m-[m
[31m-# Attempt to set APP_HOME[m
[31m-# Resolve links: $0 may be a link[m
[31m-PRG="$0"[m
[31m-# Need this for relative symlinks.[m
[31m-while [ -h "$PRG" ] ; do[m
[31m-    ls=`ls -ld "$PRG"`[m
[31m-    link=`expr "$ls" : '.*-> \(.*\)$'`[m
[31m-    if expr "$link" : '/.*' > /dev/null; then[m
[31m-        PRG="$link"[m
[31m-    else[m
[31m-        PRG=`dirname "$PRG"`"/$link"[m
[31m-    fi[m
[31m-done[m
[31m-SAVED="`pwd`"[m
[31m-cd "`dirname \"$PRG\"`/" >/dev/null[m
[31m-APP_HOME="`pwd -P`"[m
[31m-cd "$SAVED" >/dev/null[m
[31m-[m
[31m-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar[m
[31m-[m
[31m-# Determine the Java command to use to start the JVM.[m
[31m-if [ -n "$JAVA_HOME" ] ; then[m
[31m-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then[m
[31m-        # IBM's JDK on AIX uses strange locations for the executables[m
[31m-        JAVACMD="$JAVA_HOME/jre/sh/java"[m
[31m-    else[m
[31m-        JAVACMD="$JAVA_HOME/bin/java"[m
[31m-    fi[m
[31m-    if [ ! -x "$JAVACMD" ] ; then[m
[31m-        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME[m
[31m-[m
[31m-Please set the JAVA_HOME variable in your environment to match the[m
[31m-location of your Java installation."[m
[31m-    fi[m
[31m-else[m
[31m-    JAVACMD="java"[m
[31m-    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.[m
[31m-[m
[31m-Please set the JAVA_HOME variable in your environment to match the[m
[31m-location of your Java installation."[m
[31m-fi[m
[31m-[m
[31m-# Increase the maximum file descriptors if we can.[m
[31m-if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then[m
[31m-    MAX_FD_LIMIT=`ulimit -H -n`[m
[31m-    if [ $? -eq 0 ] ; then[m
[31m-        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then[m
[31m-            MAX_FD="$MAX_FD_LIMIT"[m
[31m-        fi[m
[31m-        ulimit -n $MAX_FD[m
[31m-        if [ $? -ne 0 ] ; then[m
[31m-            warn "Could not set maximum file descriptor limit: $MAX_FD"[m
[31m-        fi[m
[31m-    else[m
[31m-        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"[m
[31m-    fi[m
[31m-fi[m
[31m-[m
[31m-# For Darwin, add options to specify how the application appears in the dock[m
[31m-if $darwin; then[m
[31m-    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""[m
[31m-fi[m
[31m-[m
[31m-# For Cygwin, switch paths to Windows format before running java[m
[31m-if $cygwin ; then[m
[31m-    APP_HOME=`cygpath --path --mixed "$APP_HOME"`[m
[31m-    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`[m
[31m-    JAVACMD=`cygpath --unix "$JAVACMD"`[m
[31m-[m
[31m-    # We build the pattern for arguments to be converted via cygpath[m
[31m-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`[m
[31m-    SEP=""[m
[31m-    for dir in $ROOTDIRSRAW ; do[m
[31m-        ROOTDIRS="$ROOTDIRS$SEP$dir"[m
[31m-        SEP="|"[m
[31m-    done[m
[31m-    OURCYGPATTERN="(^($ROOTDIRS))"[m
[31m-    # Add a user-defined pattern to the cygpath arguments[m
[31m-    if [ "$GRADLE_CYGPATTERN" != "" ] ; then[m
[31m-        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"[m
[31m-    fi[m
[31m-    # Now convert the arguments - kludge to limit ourselves to /bin/sh[m
[31m-    i=0[m
[31m-    for arg in "$@" ; do[m
[31m-        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`[m
[31m-        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option[m
[31m-[m
[31m-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition[m
[31m-            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`[m
[31m-        else[m
[31m-            eval `echo args$i`="\"$arg\""[m
[31m-        fi[m
[31m-        i=$((i+1))[m
[31m-    done[m
[31m-    case $i in[m
[31m-        (0) set -- ;;[m
[31m-        (1) set -- "$args0" ;;[m
[31m-        (2) set -- "$args0" "$args1" ;;[m
[31m-        (3) set -- "$args0" "$args1" "$args2" ;;[m
[31m-        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;[m
[31m-        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;[m
[31m-        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;[m
[31m-        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;[m
[31m-        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;[m
[31m-        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;[m
[31m-    esac[m
[31m-fi[m
[31m-[m
[31m-# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules[m
[31m-function splitJvmOpts() {[m
[31m-    JVM_OPTS=("$@")[m
[31m-}[m
[31m-eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS[m
[31m-JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"[m
[31m-[m
[31m-exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"[m
[1mdiff --git a/gradlew.bat b/gradlew.bat[m
[1mdeleted file mode 100644[m
[1mindex 8a0b282..0000000[m
[1m--- a/gradlew.bat[m
[1m+++ /dev/null[m
[36m@@ -1,90 +0,0 @@[m
[31m-@if "%DEBUG%" == "" @echo off[m
[31m-@rem ##########################################################################[m
[31m-@rem[m
[31m-@rem  Gradle startup script for Windows[m
[31m-@rem[m
[31m-@rem ##########################################################################[m
[31m-[m
[31m-@rem Set local scope for the variables with windows NT shell[m
[31m-if "%OS%"=="Windows_NT" setlocal[m
[31m-[m
[31m-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.[m
[31m-set DEFAULT_JVM_OPTS=[m
[31m-[m
[31m-set DIRNAME=%~dp0[m
[31m-if "%DIRNAME%" == "" set DIRNAME=.[m
[31m-set APP_BASE_NAME=%~n0[m
[31m-set APP_HOME=%DIRNAME%[m
[31m-[m
[31m-@rem Find java.exe[m
[31m-if defined JAVA_HOME goto findJavaFromJavaHome[m
[31m-[m
[31m-set JAVA_EXE=java.exe[m
[31m-%JAVA_EXE% -version >NUL 2>&1[m
[31m-if "%ERRORLEVEL%" == "0" goto init[m
[31m-[m
[31m-echo.[m
[31m-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.[m
[31m-echo.[m
[31m-echo Please set the JAVA_HOME variable in your environment to match the[m
[31m-echo location of your Java installation.[m
[31m-[m
[31m-goto fail[m
[31m-[m
[31m-:findJavaFromJavaHome[m
[31m-set JAVA_HOME=%JAVA_HOME:"=%[m
[31m-set JAVA_EXE=%JAVA_HOME%/bin/java.exe[m
[31m-[m
[31m-if exist "%JAVA_EXE%" goto init[m
[31m-[m
[31m-echo.[m
[31m-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%[m
[31m-echo.[m
[31m-echo Please set the JAVA_HOME variable in your environment to match the[m
[31m-echo location of your Java installation.[m
[31m-[m
[31m-goto fail[m
[31m-[m
[31m-:init[m
[31m-@rem Get command-line arguments, handling Windowz variants[m
[31m-[m
[31m-if not "%OS%" == "Windows_NT" goto win9xME_args[m
[31m-if "%@eval[2+2]" == "4" goto 4NT_args[m
[31m-[m
[31m-:win9xME_args[m
[31m-@rem Slurp the command line arguments.[m
[31m-set CMD_LINE_ARGS=[m
[31m-set _SKIP=2[m
[31m-[m
[31m-:win9xME_args_slurp[m
[31m-if "x%~1" == "x" goto execute[m
[31m-[m
[31m-set CMD_LINE_ARGS=%*[m
[31m-goto execute[m
[31m-[m
[31m-:4NT_args[m
[31m-@rem Get arguments from the 4NT Shell from JP Software[m
[31m-set CMD_LINE_ARGS=%$[m
[31m-[m
[31m-:execute[m
[31m-@rem Setup the command line[m
[31m-[m
[31m-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar[m
[31m-[m
[31m-@rem Execute Gradle[m
[31m-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%[m
[31m-[m
[31m-:end[m
[31m-@rem End local scope for the variables with windows NT shell[m
[31m-if "%ERRORLEVEL%"=="0" goto mainEnd[m
[31m-[m
[31m-:fail[m
[31m-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of[m
[31m-rem the _cmd.exe /c_ return code![m
[31m-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1[m
[31m-exit /b 1[m
[31m-[m
[31m-:mainEnd[m
[31m-if "%OS%"=="Windows_NT" endlocal[m
[31m-[m
[31m-:omega[m
[1mdiff --git a/settings.gradle b/settings.gradle[m
[1mdeleted file mode 100644[m
[1mindex f90d039..0000000[m
[1m--- a/settings.gradle[m
[1m+++ /dev/null[m
[36m@@ -1 +0,0 @@[m
[31m-include ':app', ':glide-full-4.0.0-RC1'[m
warning: LF will be replaced by CRLF in gradlew.
The file will have its original line endings in your working directory.
